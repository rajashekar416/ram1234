{
  "stats": {
    "suites": 7,
    "tests": 48,
    "passes": 48,
    "pending": 0,
    "failures": 0,
    "start": "2015-06-26T16:29:13.481Z",
    "end": "2015-06-26T16:29:13.528Z",
    "duration": 47
  },
  "tests": [
    {
      "title": "should load a well formed config file correctly",
      "fullTitle": "The config file loader should load a well formed config file correctly",
      "duration": 3
    },
    {
      "title": "should override default values with values from the config file",
      "fullTitle": "The config file loader should override default values with values from the config file",
      "duration": 1
    },
    {
      "title": "should not override default values not overriden by the config file",
      "fullTitle": "The config file loader should not override default values not overriden by the config file",
      "duration": 0
    },
    {
      "title": "should return an empty config object when loading a non-existent file and passing null as default config",
      "fullTitle": "The config file loader should return an empty config object when loading a non-existent file and passing null as default config",
      "duration": 0
    },
    {
      "title": "should throw an exception when loading a non well formatted existing file and passing null as default config",
      "fullTitle": "The config file loader should throw an exception when loading a non well formatted existing file and passing null as default config",
      "duration": 1
    },
    {
      "title": "should load the development config file for the dev environment if no parameters are specified",
      "fullTitle": "The config file loader should load the development config file for the dev environment if no parameters are specified",
      "duration": 4
    },
    {
      "title": "should load the default config file for the dev environment if no target config file can be found and  if no parameters are specified",
      "fullTitle": "The config file loader should load the default config file for the dev environment if no target config file can be found and  if no parameters are specified",
      "duration": 1
    },
    {
      "title": "should load the development config file if no environment is specified if no parameters are specified",
      "fullTitle": "The config file loader should load the development config file if no environment is specified if no parameters are specified",
      "duration": 0
    },
    {
      "title": "should load the default config file if no environment is specified if no target config file can be found  and if no parameters are specified",
      "fullTitle": "The config file loader should load the default config file if no environment is specified if no target config file can be found  and if no parameters are specified",
      "duration": 0
    },
    {
      "title": "should load the test config file for the test environment if no parameters are specified",
      "fullTitle": "The config file loader should load the test config file for the test environment if no parameters are specified",
      "duration": 0
    },
    {
      "title": "should load the default config file for the test environment if no target config file can be found and if no  parameters are specified",
      "fullTitle": "The config file loader should load the default config file for the test environment if no target config file can be found and if no  parameters are specified",
      "duration": 1
    },
    {
      "title": "should load the staging config file for the staging environment if no parameters are specified",
      "fullTitle": "The config file loader should load the staging config file for the staging environment if no parameters are specified",
      "duration": 1
    },
    {
      "title": "should load the default config file for the staging environment if no target config file can be  found and if no parameters are specified",
      "fullTitle": "The config file loader should load the default config file for the staging environment if no target config file can be  found and if no parameters are specified",
      "duration": 1
    },
    {
      "title": "should load the default config file for the production environment if no parameters are specified and if ",
      "fullTitle": "The config file loader should load the default config file for the production environment if no parameters are specified and if ",
      "duration": 1
    },
    {
      "title": "should write a config file to disk",
      "fullTitle": "The config file loader should write a config file to disk",
      "duration": 2
    },
    {
      "title": "should send default message if validation error is null",
      "fullTitle": "The db-utils, should send default message if validation error is null",
      "duration": 0
    },
    {
      "title": "should send default message if validation path is unknown",
      "fullTitle": "The db-utils, should send default message if validation path is unknown",
      "duration": 1
    },
    {
      "title": "should be able to determine if an object is a valid mongoDB objectId",
      "fullTitle": "The db-utils, should be able to determine if an object is a valid mongoDB objectId",
      "duration": 0
    },
    {
      "title": "should send default message if validation type is unknown",
      "fullTitle": "The db-utils, should send default message if validation type is unknown",
      "duration": 1
    },
    {
      "title": "should send formatted message if validation message is defined",
      "fullTitle": "The db-utils, should send formatted message if validation message is defined",
      "duration": 0
    },
    {
      "title": "should send default message if error message is null",
      "fullTitle": "The db-utils, should send default message if error message is null",
      "duration": 0
    },
    {
      "title": "should send default message if error message is unknown",
      "fullTitle": "The db-utils, should send default message if error message is unknown",
      "duration": 0
    },
    {
      "title": "should send formatted message if error message is defined",
      "fullTitle": "The db-utils, should send formatted message if error message is defined",
      "duration": 0
    },
    {
      "title": "should return true if mongoose model is already registered, otherwise return false",
      "fullTitle": "The db-utils, should return true if mongoose model is already registered, otherwise return false",
      "duration": 0
    },
    {
      "title": "should prefix one instance of absolute href containing only a path",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix one instance of absolute href containing only a path",
      "duration": 0
    },
    {
      "title": "should prefix one instance of absolute href containing only a path of '/'",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix one instance of absolute href containing only a path of '/'",
      "duration": 0
    },
    {
      "title": "should prefix one instance of absolute href containing a path, a host and using the http protocol",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix one instance of absolute href containing a path, a host and using the http protocol",
      "duration": 0
    },
    {
      "title": "should prefix one instance of absolute href containing a path, a host, a port and using the http protocol",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix one instance of absolute href containing a path, a host, a port and using the http protocol",
      "duration": 0
    },
    {
      "title": "should NOT prefix one instance of relative href",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should NOT prefix one instance of relative href",
      "duration": 0
    },
    {
      "title": "should prefix several instances of absolute hrefs on the same line",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix several instances of absolute hrefs on the same line",
      "duration": 0
    },
    {
      "title": "should only prefix absolute hrefs among several hrefs occurences on the same line",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should only prefix absolute hrefs among several hrefs occurences on the same line",
      "duration": 0
    },
    {
      "title": "should prefix several instances of absolute hrefs on different lines",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix several instances of absolute hrefs on different lines",
      "duration": 0
    },
    {
      "title": "should only prefix absolute hrefs among several instances of hrefs on different lines",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should only prefix absolute hrefs among several instances of hrefs on different lines",
      "duration": 0
    },
    {
      "title": "should support replacing an absolute href with host and port with the same href with the supplied host and port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with host and port with the same href with the supplied host and port",
      "duration": 1
    },
    {
      "title": "should support replacing an absolute href with host and port with the same href with a different host and no port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with host and port with the same href with a different host and no port",
      "duration": 0
    },
    {
      "title": "should support replacing an absolute href with host and no port with the same href with a different host",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with host and no port with the same href with a different host",
      "duration": 1
    },
    {
      "title": "should support replacing an absolute href with host and no port with the same href with a different host and a port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with host and no port with the same href with a different host and a port",
      "duration": 0
    },
    {
      "title": "should support replacing an absolute href with no specific protocol, specific host and port with an HTTPS href with  the supplied host and port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with no specific protocol, specific host and port with an HTTPS href with  the supplied host and port",
      "duration": 0
    },
    {
      "title": "should support replacing an absolute href with a specific protocol, specific host and port with an HTTPS href with the  supplied host and port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with a specific protocol, specific host and port with an HTTPS href with the  supplied host and port",
      "duration": 1
    },
    {
      "title": "should support replacing an absolute href whith no specific protocol, specific host and port with an HTTP href with  the supplied host and port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href whith no specific protocol, specific host and port with an HTTP href with  the supplied host and port",
      "duration": 0
    },
    {
      "title": "should not replace absolute hrefs if the source protocol does not match",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should not replace absolute hrefs if the source protocol does not match",
      "duration": 0
    },
    {
      "title": "should support specifying the same protocol as the original href",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support specifying the same protocol as the original href",
      "duration": 1
    },
    {
      "title": "should output well-formed HTTP headers when passed a non-empty dictionary object",
      "fullTitle": "httputils' buildRawHttpHeadersFromDict should output well-formed HTTP headers when passed a non-empty dictionary object",
      "duration": 0
    },
    {
      "title": "should output an empty string when passed an empty dictionary",
      "fullTitle": "httputils' buildRawHttpHeadersFromDict should output an empty string when passed an empty dictionary",
      "duration": 0
    },
    {
      "title": "should prefix a string that does not start with the prefix passed as parameter",
      "fullTitle": "stringutils' prefix should prefix a string that does not start with the prefix passed as parameter",
      "duration": 0
    },
    {
      "title": "should not prefix a string that starts with the prefix passed as parameter",
      "fullTitle": "stringutils' prefix should not prefix a string that starts with the prefix passed as parameter",
      "duration": 0
    },
    {
      "title": "should prefix a string that does not start with the prefix passed as parameter but contains it",
      "fullTitle": "stringutils' prefix should prefix a string that does not start with the prefix passed as parameter but contains it",
      "duration": 0
    },
    {
      "title": "should replace matching strings by another one for property keys in an object",
      "fullTitle": "stringutils' replaceCharInKeys should replace matching strings by another one for property keys in an object",
      "duration": 1
    }
  ],
  "failures": [],
  "passes": [
    {
      "title": "should load a well formed config file correctly",
      "fullTitle": "The config file loader should load a well formed config file correctly",
      "duration": 3
    },
    {
      "title": "should override default values with values from the config file",
      "fullTitle": "The config file loader should override default values with values from the config file",
      "duration": 1
    },
    {
      "title": "should not override default values not overriden by the config file",
      "fullTitle": "The config file loader should not override default values not overriden by the config file",
      "duration": 0
    },
    {
      "title": "should return an empty config object when loading a non-existent file and passing null as default config",
      "fullTitle": "The config file loader should return an empty config object when loading a non-existent file and passing null as default config",
      "duration": 0
    },
    {
      "title": "should throw an exception when loading a non well formatted existing file and passing null as default config",
      "fullTitle": "The config file loader should throw an exception when loading a non well formatted existing file and passing null as default config",
      "duration": 1
    },
    {
      "title": "should load the development config file for the dev environment if no parameters are specified",
      "fullTitle": "The config file loader should load the development config file for the dev environment if no parameters are specified",
      "duration": 4
    },
    {
      "title": "should load the default config file for the dev environment if no target config file can be found and  if no parameters are specified",
      "fullTitle": "The config file loader should load the default config file for the dev environment if no target config file can be found and  if no parameters are specified",
      "duration": 1
    },
    {
      "title": "should load the development config file if no environment is specified if no parameters are specified",
      "fullTitle": "The config file loader should load the development config file if no environment is specified if no parameters are specified",
      "duration": 0
    },
    {
      "title": "should load the default config file if no environment is specified if no target config file can be found  and if no parameters are specified",
      "fullTitle": "The config file loader should load the default config file if no environment is specified if no target config file can be found  and if no parameters are specified",
      "duration": 0
    },
    {
      "title": "should load the test config file for the test environment if no parameters are specified",
      "fullTitle": "The config file loader should load the test config file for the test environment if no parameters are specified",
      "duration": 0
    },
    {
      "title": "should load the default config file for the test environment if no target config file can be found and if no  parameters are specified",
      "fullTitle": "The config file loader should load the default config file for the test environment if no target config file can be found and if no  parameters are specified",
      "duration": 1
    },
    {
      "title": "should load the staging config file for the staging environment if no parameters are specified",
      "fullTitle": "The config file loader should load the staging config file for the staging environment if no parameters are specified",
      "duration": 1
    },
    {
      "title": "should load the default config file for the staging environment if no target config file can be  found and if no parameters are specified",
      "fullTitle": "The config file loader should load the default config file for the staging environment if no target config file can be  found and if no parameters are specified",
      "duration": 1
    },
    {
      "title": "should load the default config file for the production environment if no parameters are specified and if ",
      "fullTitle": "The config file loader should load the default config file for the production environment if no parameters are specified and if ",
      "duration": 1
    },
    {
      "title": "should write a config file to disk",
      "fullTitle": "The config file loader should write a config file to disk",
      "duration": 2
    },
    {
      "title": "should send default message if validation error is null",
      "fullTitle": "The db-utils, should send default message if validation error is null",
      "duration": 0
    },
    {
      "title": "should send default message if validation path is unknown",
      "fullTitle": "The db-utils, should send default message if validation path is unknown",
      "duration": 1
    },
    {
      "title": "should be able to determine if an object is a valid mongoDB objectId",
      "fullTitle": "The db-utils, should be able to determine if an object is a valid mongoDB objectId",
      "duration": 0
    },
    {
      "title": "should send default message if validation type is unknown",
      "fullTitle": "The db-utils, should send default message if validation type is unknown",
      "duration": 1
    },
    {
      "title": "should send formatted message if validation message is defined",
      "fullTitle": "The db-utils, should send formatted message if validation message is defined",
      "duration": 0
    },
    {
      "title": "should send default message if error message is null",
      "fullTitle": "The db-utils, should send default message if error message is null",
      "duration": 0
    },
    {
      "title": "should send default message if error message is unknown",
      "fullTitle": "The db-utils, should send default message if error message is unknown",
      "duration": 0
    },
    {
      "title": "should send formatted message if error message is defined",
      "fullTitle": "The db-utils, should send formatted message if error message is defined",
      "duration": 0
    },
    {
      "title": "should return true if mongoose model is already registered, otherwise return false",
      "fullTitle": "The db-utils, should return true if mongoose model is already registered, otherwise return false",
      "duration": 0
    },
    {
      "title": "should prefix one instance of absolute href containing only a path",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix one instance of absolute href containing only a path",
      "duration": 0
    },
    {
      "title": "should prefix one instance of absolute href containing only a path of '/'",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix one instance of absolute href containing only a path of '/'",
      "duration": 0
    },
    {
      "title": "should prefix one instance of absolute href containing a path, a host and using the http protocol",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix one instance of absolute href containing a path, a host and using the http protocol",
      "duration": 0
    },
    {
      "title": "should prefix one instance of absolute href containing a path, a host, a port and using the http protocol",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix one instance of absolute href containing a path, a host, a port and using the http protocol",
      "duration": 0
    },
    {
      "title": "should NOT prefix one instance of relative href",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should NOT prefix one instance of relative href",
      "duration": 0
    },
    {
      "title": "should prefix several instances of absolute hrefs on the same line",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix several instances of absolute hrefs on the same line",
      "duration": 0
    },
    {
      "title": "should only prefix absolute hrefs among several hrefs occurences on the same line",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should only prefix absolute hrefs among several hrefs occurences on the same line",
      "duration": 0
    },
    {
      "title": "should prefix several instances of absolute hrefs on different lines",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should prefix several instances of absolute hrefs on different lines",
      "duration": 0
    },
    {
      "title": "should only prefix absolute hrefs among several instances of hrefs on different lines",
      "fullTitle": "httputils' prefixAbsoluteHrefsWith should only prefix absolute hrefs among several instances of hrefs on different lines",
      "duration": 0
    },
    {
      "title": "should support replacing an absolute href with host and port with the same href with the supplied host and port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with host and port with the same href with the supplied host and port",
      "duration": 1
    },
    {
      "title": "should support replacing an absolute href with host and port with the same href with a different host and no port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with host and port with the same href with a different host and no port",
      "duration": 0
    },
    {
      "title": "should support replacing an absolute href with host and no port with the same href with a different host",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with host and no port with the same href with a different host",
      "duration": 1
    },
    {
      "title": "should support replacing an absolute href with host and no port with the same href with a different host and a port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with host and no port with the same href with a different host and a port",
      "duration": 0
    },
    {
      "title": "should support replacing an absolute href with no specific protocol, specific host and port with an HTTPS href with  the supplied host and port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with no specific protocol, specific host and port with an HTTPS href with  the supplied host and port",
      "duration": 0
    },
    {
      "title": "should support replacing an absolute href with a specific protocol, specific host and port with an HTTPS href with the  supplied host and port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href with a specific protocol, specific host and port with an HTTPS href with the  supplied host and port",
      "duration": 1
    },
    {
      "title": "should support replacing an absolute href whith no specific protocol, specific host and port with an HTTP href with  the supplied host and port",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support replacing an absolute href whith no specific protocol, specific host and port with an HTTP href with  the supplied host and port",
      "duration": 0
    },
    {
      "title": "should not replace absolute hrefs if the source protocol does not match",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should not replace absolute hrefs if the source protocol does not match",
      "duration": 0
    },
    {
      "title": "should support specifying the same protocol as the original href",
      "fullTitle": "httputils' replaceHostAndPortInHrefs should support specifying the same protocol as the original href",
      "duration": 1
    },
    {
      "title": "should output well-formed HTTP headers when passed a non-empty dictionary object",
      "fullTitle": "httputils' buildRawHttpHeadersFromDict should output well-formed HTTP headers when passed a non-empty dictionary object",
      "duration": 0
    },
    {
      "title": "should output an empty string when passed an empty dictionary",
      "fullTitle": "httputils' buildRawHttpHeadersFromDict should output an empty string when passed an empty dictionary",
      "duration": 0
    },
    {
      "title": "should prefix a string that does not start with the prefix passed as parameter",
      "fullTitle": "stringutils' prefix should prefix a string that does not start with the prefix passed as parameter",
      "duration": 0
    },
    {
      "title": "should not prefix a string that starts with the prefix passed as parameter",
      "fullTitle": "stringutils' prefix should not prefix a string that starts with the prefix passed as parameter",
      "duration": 0
    },
    {
      "title": "should prefix a string that does not start with the prefix passed as parameter but contains it",
      "fullTitle": "stringutils' prefix should prefix a string that does not start with the prefix passed as parameter but contains it",
      "duration": 0
    },
    {
      "title": "should replace matching strings by another one for property keys in an object",
      "fullTitle": "stringutils' replaceCharInKeys should replace matching strings by another one for property keys in an object",
      "duration": 1
    }
  ]
}