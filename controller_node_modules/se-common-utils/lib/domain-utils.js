(function() {
  var Domain, createRequestDomain, domainMiddleware, uuidGen;

  uuidGen = require('node-uuid');

  Domain = require('domain');

  /**
   * Utility function creating a domain with a bound id
   * provided or generated.
   * @param  {Object} req the http request object
   * @param  {Object} res the http response object
   * @param  {String} id  an optional request identifier
   * @return {Domain}     a Domain instance
  */


  createRequestDomain = function(req, res, id) {
    var domain;
    domain = Domain.create();
    domain.id = id != null ? id : uuidGen.v4();
    domain.add(req);
    domain.add(res);
    return domain;
  };

  /**
   * Middleware that binds middleware chain of executions to a domain
   * (Useful binding a request ID to an execution context eg: the default logger
   * always tries to log domain.id by default)
  */


  domainMiddleware = function(req, res, next) {
    var domain;
    domain = createRequestDomain(req, res);
    domain.run(function() {
      return next();
    });
    return domain.on('error', function(err) {
      return next(err);
    });
  };

  module.exports = {
    domainMiddleware: domainMiddleware,
    createRequestDomain: createRequestDomain
  };

}).call(this);
