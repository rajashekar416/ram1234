<testsuite name="Mocha Tests" tests="50" failures="0" errors="0" skipped="0" timestamp="Wed, 02 Sep 2015 22:44:54 GMT" time="0.033">
<testcase classname="The config file loader" name="should load a well formed config file correctly" time="0.002"/>
<testcase classname="The config file loader" name="should override default values with values from the config file" time="0"/>
<testcase classname="The config file loader" name="should not override default values not overriden by the config file" time="0"/>
<testcase classname="The config file loader" name="should return an empty config object when loading a non-existent file and passing null as default config" time="0.001"/>
<testcase classname="The config file loader" name="should throw an exception when loading a non well formatted existing file and passing null as default config" time="0"/>
<testcase classname="The config file loader" name="should load the development config file for the dev environment if no parameters are specified" time="0.003"/>
<testcase classname="The config file loader" name="should load the default config file for the dev environment if no target config file can be found and  if no parameters are specified" time="0.001"/>
<testcase classname="The config file loader" name="should load the development config file if no environment is specified if no parameters are specified" time="0.001"/>
<testcase classname="The config file loader" name="should load the default config file if no environment is specified if no target config file can be found  and if no parameters are specified" time="0"/>
<testcase classname="The config file loader" name="should load the test config file for the test environment if no parameters are specified" time="0.001"/>
<testcase classname="The config file loader" name="should load the default config file for the test environment if no target config file can be found and if no  parameters are specified" time="0.001"/>
<testcase classname="The config file loader" name="should load the staging config file for the staging environment if no parameters are specified" time="0.001"/>
<testcase classname="The config file loader" name="should load the default config file for the staging environment if no target config file can be  found and if no parameters are specified" time="0"/>
<testcase classname="The config file loader" name="should load the default config file for the production environment if no parameters are specified and if " time="0.001"/>
<testcase classname="The config file loader" name="should write a config file to disk" time="0.001"/>
<testcase classname="The db-utils," name="should send default message if validation error is null" time="0"/>
<testcase classname="The db-utils," name="should send default message if validation path is unknown" time="0"/>
<testcase classname="The db-utils," name="should be able to determine if an object is a valid mongoDB objectId" time="0.001"/>
<testcase classname="The db-utils," name="should send default message if validation type is unknown" time="0"/>
<testcase classname="The db-utils," name="should send formatted message if validation message is defined" time="0"/>
<testcase classname="The db-utils," name="should send default message if error message is null" time="0"/>
<testcase classname="The db-utils," name="should send default message if error message is unknown" time="0"/>
<testcase classname="The db-utils," name="should send formatted message if error message is defined" time="0"/>
<testcase classname="The db-utils," name="should return true if mongoose model is already registered, otherwise return false" time="0"/>
<testcase classname="httputils' prefixAbsoluteHrefsWith" name="should prefix one instance of absolute href containing only a path" time="0"/>
<testcase classname="httputils' prefixAbsoluteHrefsWith" name="should prefix one instance of absolute href containing only a path of '/'" time="0.001"/>
<testcase classname="httputils' prefixAbsoluteHrefsWith" name="should prefix one instance of absolute href containing a path, a host and using the http protocol" time="0"/>
<testcase classname="httputils' prefixAbsoluteHrefsWith" name="should prefix one instance of absolute href containing a path, a host, a port and using the http protocol" time="0"/>
<testcase classname="httputils' prefixAbsoluteHrefsWith" name="should NOT prefix one instance of relative href" time="0"/>
<testcase classname="httputils' prefixAbsoluteHrefsWith" name="should prefix several instances of absolute hrefs on the same line" time="0"/>
<testcase classname="httputils' prefixAbsoluteHrefsWith" name="should only prefix absolute hrefs among several hrefs occurences on the same line" time="0"/>
<testcase classname="httputils' prefixAbsoluteHrefsWith" name="should prefix several instances of absolute hrefs on different lines" time="0"/>
<testcase classname="httputils' prefixAbsoluteHrefsWith" name="should only prefix absolute hrefs among several instances of hrefs on different lines" time="0"/>
<testcase classname="httputils' replaceHostAndPortInHrefs" name="should support replacing an absolute href with host and port with the same href with the supplied host and port" time="0.001"/>
<testcase classname="httputils' replaceHostAndPortInHrefs" name="should support replacing an absolute href with host and port with the same href with a different host and no port" time="0"/>
<testcase classname="httputils' replaceHostAndPortInHrefs" name="should support replacing an absolute href with host and no port with the same href with a different host" time="0"/>
<testcase classname="httputils' replaceHostAndPortInHrefs" name="should support replacing an absolute href with host and no port with the same href with a different host and a port" time="0"/>
<testcase classname="httputils' replaceHostAndPortInHrefs" name="should support replacing an absolute href with no specific protocol, specific host and port with an HTTPS href with  the supplied host and port" time="0"/>
<testcase classname="httputils' replaceHostAndPortInHrefs" name="should support replacing an absolute href with a specific protocol, specific host and port with an HTTPS href with the  supplied host and port" time="0"/>
<testcase classname="httputils' replaceHostAndPortInHrefs" name="should support replacing an absolute href whith no specific protocol, specific host and port with an HTTP href with  the supplied host and port" time="0"/>
<testcase classname="httputils' replaceHostAndPortInHrefs" name="should not replace absolute hrefs if the source protocol does not match" time="0"/>
<testcase classname="httputils' replaceHostAndPortInHrefs" name="should support specifying the same protocol as the original href" time="0"/>
<testcase classname="httputils' buildRawHttpHeadersFromDict" name="should output well-formed HTTP headers when passed a non-empty dictionary object" time="0"/>
<testcase classname="httputils' buildRawHttpHeadersFromDict" name="should output an empty string when passed an empty dictionary" time="0"/>
<testcase classname="httputils' parseResponseHeaders" name="should parse a response message headers" time="0.001"/>
<testcase classname="httputils' parseRequestHeaders" name="should parse a request message headers" time="0.001"/>
<testcase classname="stringutils' prefix" name="should prefix a string that does not start with the prefix passed as parameter" time="0"/>
<testcase classname="stringutils' prefix" name="should not prefix a string that starts with the prefix passed as parameter" time="0"/>
<testcase classname="stringutils' prefix" name="should prefix a string that does not start with the prefix passed as parameter but contains it" time="0"/>
<testcase classname="stringutils' replaceCharInKeys" name="should replace matching strings by another one for property keys in an object" time="0.001"/>
</testsuite>
