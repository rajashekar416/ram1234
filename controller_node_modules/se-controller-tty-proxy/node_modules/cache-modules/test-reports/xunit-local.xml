<testsuite name="Mocha Tests" tests="29" failures="0" errors="0" skipped="0" timestamp="Fri, 26 Jun 2015 13:17:39 GMT" time="0.325">
<testcase classname="The controllers-info-cache module" name="should add a registered controller" time="0.002"/>
<testcase classname="The controllers-info-cache module" name="should remove a registered controller by name" time="0.001"/>
<testcase classname="The controllers-info-cache module" name="should add a registered controller to socket 1 and then remove it by socket id" time="0.001"/>
<testcase classname="The controllers-info-cache module" name="should add a registered controller to socket 1 and get it by name" time="0.001"/>
<testcase classname="The controllers-info-cache module" name="should add a registered controller to socket 2 and get it by socketid" time="0"/>
<testcase classname="The controllers-info-cache module" name="should clear the socket id to controller hash mapping" time="0.001"/>
<testcase classname="The controllers-info-cache module" name="should reject adding a null controller" time="0"/>
<testcase classname="The controllers-info-cache module" name="should reject adding a controller without name" time="0.001"/>
<testcase classname="The controllers-info-cache module" name="should reject adding a controller without socketId" time="0"/>
<testcase classname="The controllers-info-cache module" name="should reject removal of a null controller with name" time="0"/>
<testcase classname="The controllers-info-cache module" name="should reject removal of a null controller with socketId" time="0"/>
<testcase classname="The controllers-info-cache module" name="should reject removal of a nonregistered controller with name" time="0"/>
<testcase classname="The controllers-info-cache module" name="should reject removal of a nonregistered controller with socketId" time="0"/>
<testcase classname="The controllers-info-cache module" name="should reject getting a null controller with name" time="0.001"/>
<testcase classname="The controllers-info-cache module" name="should reject getting a null controller with socketId" time="0"/>
<testcase classname="The controllers-info-cache module" name="should accept adding two controllers with same name two different sockets" time="0"/>
<testcase classname="The controllers-info-cache module" name="should not delete the controller from the cache, if 2 sockets exist for the same controller and the first connection terminated" time="0.001"/>
<testcase classname="Redis Client Manager" name="should be able to retrieve the Redis Replication Groups topology" time="0.001"/>
<testcase classname="Redis Client Manager" name="should be able to return the primary cache client" time="0"/>
<testcase classname="Redis Client Manager" name="should be able to return the replica cache client" time="0"/>
<testcase classname="Redis Client Manager" name="should not reconfigure the replication group when no change in the topology" time="0.001"/>
<testcase classname="Redis Client Manager" name="should not reconfigure the replication group when the topology state is 'modyfing' " time="0"/>
<testcase classname="Redis Client Manager" name="should be able to reconfigure the replication group and reconnect on the cache nodes when a failover occured" time="0.004"/>
<testcase classname="Redis Client Manager" name="should get an error when retrieving a Redis Replication Groups topology with an invalid group id" time="0"/>
<testcase classname="The service-info-cache module" name="getNodes should return a node registered for the service" time="0.027"/>
<testcase classname="The service-info-cache module" name="getNodes should return all nodes registered for the service" time="0.027"/>
<testcase classname="The service-info-cache module" name="getNodes should eventually stop returning dead service nodes" time="0.122"/>
<testcase classname="The service-info-cache module" name="getNodes should handle an empty list" time="0.001"/>
<testcase classname="The service-info-cache module" name="getRandomNode should return an error if no node available" time="0"/>
</testsuite>
